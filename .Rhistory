install.packages("BiocManager")
BiocManager::install()
BiocManager::install("RCy3")
library(RCy3)
cytoscapePing()
cytoscapePing()
cytoscapeVersionInfo
openSession()
setNodeColorMapping('gal80Rexp', colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeBorderColorMapping('gal80Rsig',c(0,0.05), c("#FF0000","#FF0000","#FF0000","#555555"),style.name="galFiltered Style")
setNodeBorderWidthMapping('gal80Rsig',c(0,0.05),c(4,4,4,1),style.name="galFiltered Style")
createColumnFilter('myFilter', 'gal80Rexp', 2, "GREATER_THAN")
selectFirstNeighbors() #first degree
selectFirstNeighbors() #second degree
createSubnetwork(nodes="selected", subnetwork.name='galFiltered sub')
layoutNetwork('force-directed')
saveSession('basic-data-visualization.cys')
exportImage('basic-data-visualization', 'PDF')
>openSession()
?OpenSession
?openSession
install.packages("CyTargetLinker")
install.packages("CyTargetLinker")
cytoscapeVersionInfo
openSession()
openSession("rotenone-8-50-12.cys")
openSession(""C:\Users\klemm\Documents\Internship\rotenone-8-50-12.cys"")
openSession("C:\Users\klemm\Documents\Internship\rotenone-8-50-12.cys")
openSession(""C:\Users\klemm\Documents\Internship\rotenone-8-50-12.cys"")
openSession("rotenone-8-50-12.cys")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("RCy3")
library(RCy3)
cytoscapePing()
openSession("rotenone-8-50-12.cys")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("RCy3")
library(RCy3)
cytoscapePing()
cytoscapeVersionInfo
openSession("rotenone-8-50-12.cys")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeBorderColorMapping("adj.P.Val",c(0,0.05), c("#FF0000","#FF0000","#FF0000","#555555"),style.name="galFiltered Style")
setNodeBorderWidthMapping("adj.P.Val",c(0,0.05),c(4,4,4,1),style.name="galFiltered Style")
createColumnFilter("rotfilter", "logFC", 2, "GREATER_THAN")
openSession("rotenone-8-50-12.cys")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
openSession("rotenone-8-50-12.cys")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("RCy3")
library(RCy3)
cytoscapePing()
cytoscapeVersionInfo
openSession("rotenone-8-50-12.cys")
install.packages("BiocManager")
install.packages("BiocManager")
cytoscapePing()
cytoscapeVersionInfo
openSession("rotenone-8-50-12.cys")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeColorMapping(table.column = "logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeColorMapping(table.column = "logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
openSession("rotenone-8-50-12.cys")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
>openSession
?openSession
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="galFiltered Style")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="CyTargetLinker")
setNodeBorderColorMapping("adj.P.Val",c(0,0.05), c("#FF0000","#FF0000","#FF0000","#555555"),style.name="CyTargetLinker")
setNodeBorderColorMapping("adj.P.Val",c(0,0.05), c("#FF0000","#FF0000","#FF0000","#555555"),style.name="CyTargetLinker")
setNodeBorderWidthMapping("adj.P.Val",c(0,0.05),c(4,4,4,1),style.name="CyTargetLinker")
createColumnFilter("rotfilter", "logFC", 2, "GREATER_THAN")
selectFirstNeighbors() #first degree
selectFirstNeighbors() #second degree
createSubnetwork(nodes="selected", subnetwork.name="rot-8-50-12-sub")
layoutNetwork('force-directed')
saveSession("rotenone-8-50-12-r")
exportImage("rotenone-8-50-12-r", 'PDF')
install.packages("BiocManager")
BiocManager::install()
#Installimg packages
library(RCy3)
BiocManager::install("RCy3")
#Installimg packages
library(RCy3)
cytoscapePing()
cytoscapePing()
cytoscapePing()
cytoscapeVersionInfo
#Pinging CYtoscape to check if it is properly running, and checking what version of Cytoscape is loaded
openSession("rotenone-8-50-12.cys")
setNodeColorMapping("logFC", colors=paletteColorBrewerRdBu, style.name="CyTargetLinker")
#Setting node borders to red if their p-value is between 0 and 0,05 (p-value <+ 0,05)
setNodeBorderWidthMapping("P.Value",c(0,0.05),c(4,4,4,1),style.name="CyTargetLinker")
#Setting node border width to 4 if their p-value is bewtween 0 and 0.05 (p-value <- 0.05)
createColumnFilter("rotfilter", "logFC", 2, "GREATER_THAN")
selectFirstNeighbors() #first degree
selectFirstNeighbors() #second degree
#Filtering columns by logFC<2 and selecting first and second degree neighbors
createSubnetwork(nodes="selected", subnetwork.name="rot-8-50-12-sub")
#Creating a subnetwork from the network
layoutNetwork('force-directed')
install.packages("ggplot2")
install.packages("ggrepel")
install.packages("readr")
library(readr)
#Installing required packages
xp1 <- read_delim("expression/8_dmso_vs_8_rot50_12.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
setwd("~/GitHub/rotenone-geo2r-vis")
#Installing required packages
xp1 <- read_delim("expression/8_dmso_vs_8_rot50_12.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
xp2 <- read_delim("expression/8_dmso_vs_8_rot50_24.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
xp3 <- read_delim("expression/8_dmso_vs_8_rot100_24.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
xp4 <- read_delim("expression/15_dmso_vs_15_rot50_12.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
xp5<- read_delim("expression/15_dmso_vs_15_rot50_24.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
xp6 <- read_delim("expression/15_dmso_vs_15_rot100_24.tsv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
library(ggplot2)
library(ggrepel)
volcp <- function(xp) {
xp$diffexpressed <- "NO"
xp$diffexpressed[xp$logFC > 0.6 & xp$P.Value < 0.05] <- "UP"
xp$diffexpressed[xp$logFC < -0.6 & xp$P.Value < 0.05] <- "DOWN"
#Setting the labels for significantly (P-value < 0.05) up and down regulated genes
xp$xplabel <- NA
xp$xplabel[xp$diffexpressed != "NO"] <- xp$GENE_SYMBOL[xp$diffexpressed != "NO"]
ggplot(data=xp, aes(x=logFC, y=-log10(P.Value), col=diffexpressed, label=xplabel)) +
geom_point() +
theme_minimal() +
geom_text_repel(max.overlaps = Inf) +
scale_color_manual(values = c("blue", "black", "red")) +
#Setting the color for the points according to their expression
geom_vline(xintercept=c(-0.6, 0.6), col="red") +
geom_hline(yintercept=-log10(0.05), col="red")
#Adding a vertical and horizontal line to indicate logFC and p-value significance
}
#Defining the function to generate a volcano plot from the given expression data
volcp(xp1)
#Defining the function to generate a volcano plot from the given expression data
volcp(xp2)
#Defining the function to generate a volcano plot from the given expression data
volcp(xp3)
#Defining the function to generate a volcano plot from the given expression data
volcp(xp4)
#Defining the function to generate a volcano plot from the given expression data
volcp(xp1)
